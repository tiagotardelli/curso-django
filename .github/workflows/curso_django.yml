name: Django Application

on:
  pull_request:
  push:
    branchs:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code 
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      
      - name: Install npm
        run: npm install

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
 
      - name: Install dependencies 
#        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
          pipenv sync --dev
          cat contrib/env-sample >> .env
      
      - name: Connect to PostgreSQL
        run: node postgres.js

      - name: Test With Flake8
        run: pipenv run flake8 .

      - name: Test With Pytest
        run: pipenv run pytest --cov=pypro

      - name: codecov
        run: pipenv run codecov
